/*
 *	    ____  ____  _____   ____________
 *	   / __ / __ /  _/ | / /_  __/ __
 *	  / /_/ / /_/ // //  |/ / / / / /_/ /
 *	 / ____/ _, _// // /|  / / / / _, _/
 *	/_/   /_/ |_/___/_/ |_/ /_/ /_/ |_|
 *
 *	Copyright Printr B.V. All rights reserved.
 *	This code is closed source and should under
 *	nu circumstances be copied or used in other
 *	applications than for Printr B.V.
 *
 */

var request = require('request');

function Client(formide) {
	this.formide = formide;
}

Client.prototype.all = function(accessToken, next) {
	request.get({
		url: this.formide.config.apiUrl + '/clients',
		strictSSL: false,
		auth: {
			bearer: accessToken
  		}
	}, function(error, response, body) {
		if(error) return next(JSON.parse(error));
		return next(null, JSON.parse(body));
	}.bind(this));
};

Client.prototype.get = function(clientId, accessToken, next) {
	request.get({
		url: this.formide.config.apiUrl + '/clients/' + clientId,
		strictSSL: false,
		auth: {
			bearer: accessToken
		}
	}, function(error, response, body) {
		if(error) return next(JSON.parse(error));
		return next(null, JSON.parse(body));
	});
};

Client.prototype.getAsClient = function(macAddress, accessToken, next) {
	request.get({
		url: this.formide.config.apiUrl + '/clients/' + macAddress + '/' + accessToken,
		strictSSL: false
	}, function(error, response, body) {
		if(error) return next(JSON.parse(error));
		return next(null, JSON.parse(body));
	});
};

Client.prototype.updateSessiondata = function(macAddress, accessToken, sessiondata, next) {
	request.post({
		url: this.formide.config.apiUrl + '/clients/updatesession/' + macAddress + '/' + accessToken,
		strictSSL: false,
		form: sessiondata
	}, function(error, response, body) {
		if(error) return next(JSON.parse(error));
		return next(null, JSON.parse(body));
	});
};

module.exports = Client;